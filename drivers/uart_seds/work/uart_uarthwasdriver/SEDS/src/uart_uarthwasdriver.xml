<?xml version="1.0" encoding="utf-8"?>
<PackageFile
  xmlns="http://www.ccsds.org/schema/sois/seds"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.ccsds.org/schema/sois/seds seds.xsd">
  <Package name="uart_uarthwasdriver">
    <!-- Include all data types from asn models - generated code -->
    <xi:include href="system_structure_types.xml" parse="xml" xpointer="element(/1/1/1)"/>
    <ComponentSet>
      <Component name="uart_uarthwasdriver">
        <!-- Include all components for uart_UartHwasDriver - generated code -->
        <xi:include href="system_structure.xml" parse="xml" xpointer="element(/1/1/1/1/1)"/>
        <xi:include href="system_structure.xml" parse="xml" xpointer="element(/1/1/1/1/2)"/>
        <xi:include href="system_structure.xml" parse="xml" xpointer="element(/1/1/1/1/3)"/>
        <!-- user code - put your SEDS uart_UartHwasDriver code here -->
        <Implementation>
          <VariableSet>
            <Variable name="uartVar" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="uartVar0" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="uartVar1" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="uartVar2" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="uartVar3" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="uartVar4" type="com/n7space/UartHwas/UartHwas"></Variable>
            <Variable name="configVar" type="com/n7space/UartHwas/UartHwasConfig" />
            <Variable name="pmcVar" type="com/n7space/UartHwas/PmcHwasUart" />
            <Variable name="bitsValueVar" type="com/n7space/Hwas/Word" />
            <Variable name="bitsMaskVar" type="com/n7space/Hwas/WordMask" />
            <Variable name="byteVar" type="com/n7space/Hwas/Byte"></Variable>
            <Variable name="destinationAddressVar" type="com/n7space/Hwas/DestinationAddress" />
            <Variable name="sourceAddressVar" type="com/n7space/Hwas/SourceAddress"></Variable>
            <Variable name="irqNumberVar" type="com/n7space/Hwas/InterruptNumber"></Variable>
            <Variable name="pioConfigVar" type="com/n7space/PioHwas/PioHwasPinConfig"></Variable>
            <Variable name="pioVar" type="com/n7space/PioHwas/PioHwas"></Variable>
            <Variable name="readWrapperVar" type="DataviewUniqTypes/UartHwasInterfaceType_ReadByteAsyncCmd_Type"></Variable>
            <Variable name="sendWrapperVar" type="DataviewUniqTypes/UartHwasInterfaceType_SendByteAsyncCmd_Type"></Variable>
            <Variable name="readWrapperNotifyVar" type="DataviewUniqTypes/UartHwasInterfaceType_ReadByteAsyncCmd_TypeNotify"></Variable>
            <Variable name="sendWrapperNotifyVar" type="DataviewUniqTypes/UartHwasInterfaceType_SendByteAsyncCmd_TypeNotify"></Variable>
          </VariableSet>
          <ActivitySet>
            <Activity name="UpdateLocalUart">
              <Argument type="com/n7space/UartHwas/UartHwas" name="uart" />
              <Argument type="com/n7space/UartHwas/UartHwasConfig" name="config" />
              <Body>
                <Conditional shortDescription="Update local UART variable">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Instance_0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="uartVar0">
                      <VariableRef variableRef="uart" />
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Instance_1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="uartVar1">
                          <VariableRef variableRef="uart" />
                        </Assignment>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="config.mInstance" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="uart_UartHwas_Instance_2" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="uartVar2">
                              <VariableRef variableRef="uart" />
                            </Assignment>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="config.mInstance" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="uart_UartHwas_Instance_3" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="uartVar3">
                                  <VariableRef variableRef="uart" />
                                </Assignment>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="config.mInstance" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="uart_UartHwas_Instance_4" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="uartVar4">
                                      <VariableRef variableRef="uart" />
                                    </Assignment>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
              </Body>
            </Activity>
            <Activity name="GetLocalUart">
              <Body>
                <Conditional shortDescription="Assing proper local UART to uartVar, according to irq num">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="irqNumberVar" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="7" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="uartVar">
                      <VariableRef variableRef="uartVar0" />
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="irqNumberVar" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="8" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="uartVar">
                          <VariableRef variableRef="uartVar1" />
                        </Assignment>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="irqNumberVar" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="44" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="uartVar">
                              <VariableRef variableRef="uartVar2" />
                            </Assignment>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="irqNumberVar" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="45" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="uartVar">
                                  <VariableRef variableRef="uartVar3" />
                                </Assignment>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="irqNumberVar" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="46" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="uartVar">
                                      <VariableRef variableRef="uartVar4" />
                                    </Assignment>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
              </Body>
            </Activity>
            <Activity name="InitPmc">
              <Body>
                <Assignment outputVariableRef="pmcVar.PMC_PCER0_OFFSET">
                  <Value value="1074660880" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCER1_OFFSET">
                  <Value value="1074661120" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR0_PID7_UART0_MASK">
                  <Value value="128" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR0_PID8_UART1_MASK">
                  <Value value="256" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR1_PID44_UART2_MASK">
                  <Value value="4096" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR1_PID45_UART3_MASK">
                  <Value value="8192" />
                </Assignment>
                <Assignment outputVariableRef="pmcVar.PMC_PCxR1_PID46_UART4_MASK">
                  <Value value="16384" />
                </Assignment>
              </Body>
            </Activity>
            <Activity name="InitPio">
              <Argument type="com/n7space/UartHwas/UartHwasConfig" name="config" />
              <Body>
                <Conditional shortDescription="Config Uart pios">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Instance_0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="pioConfigVar.mPortConfig">
                      <Value value="uart_PioHwas_Port_A" />
                    </Assignment>
                    <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                      <Value value="9" />
                    </Assignment>
                    <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                      <Value value="uart_PioHwas_Direction_Input" />
                    </Assignment>
                    <Assignment outputVariableRef="pioConfigVar.mControlConfig">
                      <Value value="uart_PioHwas_Control_PeripheralA" />
                    </Assignment>
                    <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                      <LongDescription>Init uart Rx pin</LongDescription>
                      <ArgumentValue name="pio">
                        <VariableRef variableRef="pioVar"></VariableRef>
                      </ArgumentValue>
                      <ArgumentValue name="config">
                        <VariableRef variableRef="pioConfigVar"></VariableRef>
                      </ArgumentValue>
                    </SendCommandPrimitive>
                    <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                      <Value value="10" />
                    </Assignment>
                    <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                      <Value value="uart_PioHwas_Direction_Output" />
                    </Assignment>
                    <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                      <LongDescription>Init uart Tx pin</LongDescription>
                      <ArgumentValue name="pio">
                        <VariableRef variableRef="pioVar"></VariableRef>
                      </ArgumentValue>
                      <ArgumentValue name="config">
                        <VariableRef variableRef="pioConfigVar"></VariableRef>
                      </ArgumentValue>
                    </SendCommandPrimitive>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Instance_1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="pioConfigVar.mPortConfig">
                          <Value value="uart_PioHwas_Port_A" />
                        </Assignment>
                        <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                          <Value value="5" />
                        </Assignment>
                        <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                          <Value value="uart_PioHwas_Direction_Input" />
                        </Assignment>
                        <Assignment outputVariableRef="pioConfigVar.mControlConfig">
                          <Value value="uart_PioHwas_Control_PeripheralC" />
                        </Assignment>
                        <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                          <LongDescription>Init uart Rx pin</LongDescription>
                          <ArgumentValue name="pio">
                            <VariableRef variableRef="pioVar"></VariableRef>
                          </ArgumentValue>
                          <ArgumentValue name="config">
                            <VariableRef variableRef="pioConfigVar"></VariableRef>
                          </ArgumentValue>
                        </SendCommandPrimitive>
                        <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                          <Value value="6" />
                        </Assignment>
                        <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                          <Value value="uart_PioHwas_Direction_Output" />
                        </Assignment>
                        <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                          <LongDescription>Init uart Tx pin</LongDescription>
                          <ArgumentValue name="pio">
                            <VariableRef variableRef="pioVar"></VariableRef>
                          </ArgumentValue>
                          <ArgumentValue name="config">
                            <VariableRef variableRef="pioConfigVar"></VariableRef>
                          </ArgumentValue>
                        </SendCommandPrimitive>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="config.mInstance" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="uart_UartHwas_Instance_2" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="pioConfigVar.mPortConfig">
                              <Value value="uart_PioHwas_Port_D" />
                            </Assignment>
                            <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                              <Value value="25" />
                            </Assignment>
                            <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                              <Value value="uart_PioHwas_Direction_Input" />
                            </Assignment>
                            <Assignment outputVariableRef="pioConfigVar.mControlConfig">
                              <Value value="uart_PioHwas_Control_PeripheralC" />
                            </Assignment>
                            <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                              <LongDescription>Init uart Rx pin</LongDescription>
                              <ArgumentValue name="pio">
                                <VariableRef variableRef="pioVar"></VariableRef>
                              </ArgumentValue>
                              <ArgumentValue name="config">
                                <VariableRef variableRef="pioConfigVar"></VariableRef>
                              </ArgumentValue>
                            </SendCommandPrimitive>
                            <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                              <Value value="26" />
                            </Assignment>
                            <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                              <Value value="uart_PioHwas_Direction_Output" />
                            </Assignment>
                            <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                              <LongDescription>Init uart Tx pin</LongDescription>
                              <ArgumentValue name="pio">
                                <VariableRef variableRef="pioVar"></VariableRef>
                              </ArgumentValue>
                              <ArgumentValue name="config">
                                <VariableRef variableRef="pioConfigVar"></VariableRef>
                              </ArgumentValue>
                            </SendCommandPrimitive>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="config.mInstance" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="uart_UartHwas_Instance_3" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="pioConfigVar.mPortConfig">
                                  <Value value="uart_PioHwas_Port_D" />
                                </Assignment>
                                <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                                  <Value value="28" />
                                </Assignment>
                                <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                                  <Value value="uart_PioHwas_Direction_Input" />
                                </Assignment>
                                <Assignment outputVariableRef="pioConfigVar.mControlConfig">
                                  <Value value="uart_PioHwas_Control_PeripheralA" />
                                </Assignment>
                                <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                                  <LongDescription>Init uart Rx pin</LongDescription>
                                  <ArgumentValue name="pio">
                                    <VariableRef variableRef="pioVar"></VariableRef>
                                  </ArgumentValue>
                                  <ArgumentValue name="config">
                                    <VariableRef variableRef="pioConfigVar"></VariableRef>
                                  </ArgumentValue>
                                </SendCommandPrimitive>
                                <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                                  <Value value="30" />
                                </Assignment>
                                <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                                  <Value value="uart_PioHwas_Direction_Output" />
                                </Assignment>
                                <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                                  <LongDescription>Init uart Tx pin</LongDescription>
                                  <ArgumentValue name="pio">
                                    <VariableRef variableRef="pioVar"></VariableRef>
                                  </ArgumentValue>
                                  <ArgumentValue name="config">
                                    <VariableRef variableRef="pioConfigVar"></VariableRef>
                                  </ArgumentValue>
                                </SendCommandPrimitive>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="config.mInstance" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="uart_UartHwas_Instance_4" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="pioConfigVar.mPortConfig">
                                      <Value value="uart_PioHwas_Port_D" />
                                    </Assignment>
                                    <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                                      <Value value="18" />
                                    </Assignment>
                                    <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                                      <Value value="uart_PioHwas_Direction_Input" />
                                    </Assignment>
                                    <Assignment outputVariableRef="pioConfigVar.mControlConfig">
                                      <Value value="uart_PioHwas_Control_PeripheralC" />
                                    </Assignment>
                                    <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                                      <LongDescription>Init uart Rx pin</LongDescription>
                                      <ArgumentValue name="pio">
                                        <VariableRef variableRef="pioVar"></VariableRef>
                                      </ArgumentValue>
                                      <ArgumentValue name="config">
                                        <VariableRef variableRef="pioConfigVar"></VariableRef>
                                      </ArgumentValue>
                                    </SendCommandPrimitive>
                                    <Assignment outputVariableRef="pioConfigVar.mPinConfig">
                                      <Value value="19" />
                                    </Assignment>
                                    <Assignment outputVariableRef="pioConfigVar.mDirectionConfig">
                                      <Value value="uart_PioHwas_Direction_Output" />
                                    </Assignment>
                                    <SendCommandPrimitive interface="PioHwas_InitPin_RiRi" command="PioHwas_InitPin_RiRi">
                                      <LongDescription>Init uart Tx pin</LongDescription>
                                      <ArgumentValue name="pio">
                                        <VariableRef variableRef="pioVar"></VariableRef>
                                      </ArgumentValue>
                                      <ArgumentValue name="config">
                                        <VariableRef variableRef="pioConfigVar"></VariableRef>
                                      </ArgumentValue>
                                    </SendCommandPrimitive>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
              </Body>
            </Activity>
            <Activity name="InitUartContainer">
              <Body>
                <Assignment outputVariableRef="uartVar.mUartCrAddress">
                  <Value value="0" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartCrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <Value value="0" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartMrAddress">
                  <Value value="4" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartMrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartMrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartIerAddress">
                  <Value value="8" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartIerAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartIerAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartIdrAddress">
                  <Value value="12" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartIdrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartIdrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartImrAddress">
                  <Value value="16" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartImrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartImrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartSrAddress">
                  <Value value="20" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartSrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartSrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartRhrAddress">
                  <Value value="24" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartRhrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartRhrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartThrAddress">
                  <Value value="28" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartThrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartThrAddress" />
                </MathOperation>
                <Assignment outputVariableRef="uartVar.mUartBrgrAddress">
                  <Value value="32" />
                </Assignment>
                <MathOperation outputVariableRef="uartVar.mUartBrgrAddress">
                  <Operator operator="add" />
                  <VariableRef variableRef="uartVar.mInstanceAddress"></VariableRef>
                  <VariableRef variableRef="uartVar.mUartBrgrAddress" />
                </MathOperation>
              </Body>
            </Activity>
            <Activity name="InitUart">
              <Argument name="config" type="com/n7space/UartHwas/UartHwasConfig"></Argument>
              <Body>
                <Call activity="InitPmc">
                  <LongDescription>Init PMC with definitions of masks and addresses</LongDescription>
                </Call>
                <Conditional shortDescription="Set UART instance register address">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Instance_0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="uartVar.mInstanceAddress">
                      <Value value="1074661376"></Value>
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Instance_1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="uartVar.mInstanceAddress">
                          <Value value="1074661888" />
                        </Assignment>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="config.mInstance" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="uart_UartHwas_Instance_2" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="uartVar.mInstanceAddress">
                              <Value value="1074665984" />
                            </Assignment>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="config.mInstance" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="uart_UartHwas_Instance_3" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="uartVar.mInstanceAddress">
                                  <Value value="1074666496" />
                                </Assignment>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="config.mInstance" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="uart_UartHwas_Instance_4" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="uartVar.mInstanceAddress">
                                      <Value value="1074667008" />
                                    </Assignment>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <Call activity="InitUartContainer">
                  <LongDescription>Set the rest of the Pio register addresses</LongDescription>
                </Call>
                <Conditional shortDescription="Init Pmc">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Instance_0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="destinationAddressVar">
                      <VariableRef variableRef="pmcVar.PMC_PCER0_OFFSET" />
                    </Assignment>
                    <Assignment outputVariableRef="bitsMaskVar">
                      <VariableRef variableRef="pmcVar.PMC_PCxR0_PID7_UART0_MASK" />
                    </Assignment>
                    <Assignment outputVariableRef="bitsValueVar">
                      <VariableRef variableRef="pmcVar.PMC_PCxR0_PID7_UART0_MASK" />
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Instance_1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="destinationAddressVar" shortDescription="Set destination register to PCER0">
                          <VariableRef variableRef="pmcVar.PMC_PCER0_OFFSET" />
                        </Assignment>
                        <Assignment outputVariableRef="bitsMaskVar">
                          <VariableRef variableRef="pmcVar.PMC_PCxR0_PID8_UART1_MASK" />
                        </Assignment>
                        <Assignment outputVariableRef="bitsValueVar">
                          <VariableRef variableRef="pmcVar.PMC_PCxR0_PID8_UART1_MASK" />
                        </Assignment>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="config.mInstance" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="uart_UartHwas_Instance_2" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="destinationAddressVar" shortDescription="Set destination register to PCER1">
                              <VariableRef variableRef="pmcVar.PMC_PCER1_OFFSET" />
                            </Assignment>
                            <Assignment outputVariableRef="bitsMaskVar">
                              <VariableRef variableRef="pmcVar.PMC_PCxR1_PID44_UART2_MASK" />
                            </Assignment>
                            <Assignment outputVariableRef="bitsValueVar">
                              <VariableRef variableRef="pmcVar.PMC_PCxR1_PID44_UART2_MASK" />
                            </Assignment>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="config.mInstance" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="uart_UartHwas_Instance_3" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="destinationAddressVar" shortDescription="Set destination register to PCER1">
                                  <VariableRef variableRef="pmcVar.PMC_PCER1_OFFSET" />
                                </Assignment>
                                <Assignment outputVariableRef="bitsMaskVar">
                                  <VariableRef variableRef="pmcVar.PMC_PCxR1_PID45_UART3_MASK" />
                                </Assignment>
                                <Assignment outputVariableRef="bitsValueVar">
                                  <VariableRef variableRef="pmcVar.PMC_PCxR1_PID45_UART3_MASK" />
                                </Assignment>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="config.mInstance" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="uart_UartHwas_Instance_4" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="destinationAddressVar" shortDescription="Set destination register to PCER1">
                                      <VariableRef variableRef="pmcVar.PMC_PCER1_OFFSET" />
                                    </Assignment>
                                    <Assignment outputVariableRef="bitsMaskVar">
                                      <VariableRef variableRef="pmcVar.PMC_PCxR1_PID46_UART4_MASK" />
                                    </Assignment>
                                    <Assignment outputVariableRef="bitsValueVar">
                                      <VariableRef variableRef="pmcVar.PMC_PCxR1_PID46_UART4_MASK" />
                                    </Assignment>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <SendCommandPrimitive shortDescription="Enable proper UART instance clock" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="bitsMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Call activity="InitPio">
                  <LongDescription>Initializes Rx and Tx pins</LongDescription>
                  <ArgumentValue name="config">
                    <VariableRef variableRef="configVar" />
                  </ArgumentValue>
                </Call>
                <Assignment outputVariableRef="destinationAddressVar">
                  <VariableRef variableRef="uartVar.mUartCrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Enable Rx and Tx" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="80" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="80" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <VariableRef variableRef="uartVar.mUartMrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Set no parity mode and clear chmode bits (set normal mode)" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="51200" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="2048" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <VariableRef variableRef="uartVar.mUartBrgrAddress" />
                </Assignment>
                <Conditional shortDescription="Set baudrate">
                  <LongDescription>Is baudrate equal to 9600?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mBaudrate" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Baudrate9600" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="bitsMaskVar">
                      <Value value="488" />
                    </Assignment>
                    <Assignment outputVariableRef="bitsValueVar">
                      <Value value="488" />
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is baudrate equal to 115200?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mBaudrate" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Baudrate115200" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="bitsMaskVar">
                          <Value value="40" />
                        </Assignment>
                        <Assignment outputVariableRef="bitsValueVar">
                          <Value value="40" />
                        </Assignment>
                      </OnConditionTrue>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <SendCommandPrimitive shortDescription="Set no parity mode and clear chmode bits (set normal mode)" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="bitsMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Conditional shortDescription="Set UART irq number">
                  <LongDescription>Is instance equal to 0?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="config.mInstance" />
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="uart_UartHwas_Instance_0" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="uartVar.mIrqNumber">
                      <Value value="7"></Value>
                    </Assignment>
                  </OnConditionTrue>
                  <OnConditionFalse>
                    <Conditional>
                      <LongDescription>Is instance equal to 1?</LongDescription>
                      <Condition>
                        <Condition>
                          <FirstOperand variableRef="config.mInstance" />
                          <ComparisonOperator>equals</ComparisonOperator>
                          <Value value="uart_UartHwas_Instance_1" />
                        </Condition>
                      </Condition>
                      <OnConditionTrue>
                        <Assignment outputVariableRef="uartVar.mIrqNumber">
                          <Value value="8" />
                        </Assignment>
                      </OnConditionTrue>
                      <OnConditionFalse>
                        <Conditional>
                          <LongDescription>Is instance equal to 2?</LongDescription>
                          <Condition>
                            <Condition>
                              <FirstOperand variableRef="config.mInstance" />
                              <ComparisonOperator>equals</ComparisonOperator>
                              <Value value="uart_UartHwas_Instance_2" />
                            </Condition>
                          </Condition>
                          <OnConditionTrue>
                            <Assignment outputVariableRef="uartVar.mIrqNumber">
                              <Value value="44" />
                            </Assignment>
                          </OnConditionTrue>
                          <OnConditionFalse>
                            <Conditional>
                              <LongDescription>Is instance equal to 3?</LongDescription>
                              <Condition>
                                <Condition>
                                  <FirstOperand variableRef="config.mInstance" />
                                  <ComparisonOperator>equals</ComparisonOperator>
                                  <Value value="uart_UartHwas_Instance_3" />
                                </Condition>
                              </Condition>
                              <OnConditionTrue>
                                <Assignment outputVariableRef="uartVar.mIrqNumber">
                                  <Value value="45" />
                                </Assignment>
                              </OnConditionTrue>
                              <OnConditionFalse>
                                <Conditional>
                                  <LongDescription>Is instance equal to 4?</LongDescription>
                                  <Condition>
                                    <Condition>
                                      <FirstOperand variableRef="config.mInstance" />
                                      <ComparisonOperator>equals</ComparisonOperator>
                                      <Value value="uart_UartHwas_Instance_4" />
                                    </Condition>
                                  </Condition>
                                  <OnConditionTrue>
                                    <Assignment outputVariableRef="uartVar.mIrqNumber">
                                      <Value value="46" />
                                    </Assignment>
                                  </OnConditionTrue>
                                </Conditional>
                              </OnConditionFalse>
                            </Conditional>
                          </OnConditionFalse>
                        </Conditional>
                      </OnConditionFalse>
                    </Conditional>
                  </OnConditionFalse>
                </Conditional>
                <Assignment outputVariableRef="configVar">
                  <VariableRef variableRef="config" />
                </Assignment>
                <Call activity="UpdateLocalUart">
                  <LongDescription>Updates spcific local UART variable</LongDescription>
                  <ArgumentValue name="uart">
                    <VariableRef variableRef="uartVar" />
                  </ArgumentValue>
                  <ArgumentValue name="config">
                    <VariableRef variableRef="configVar" />
                  </ArgumentValue>
                </Call>
                <SendCommandPrimitive shortDescription="Return set uart container" interface="UartHwas_InitUartCmd_PiPi" command="UartHwas_InitUartCmd_PiPi">
                  <ArgumentValue name="uart">
                    <VariableRef variableRef="uartVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
            <Activity name="ReadByteAsync">
              <Argument name="uart" type="com/n7space/UartHwas/UartHwas" />
              <Body>
                <Assignment outputVariableRef="destinationAddressVar">
                  <VariableRef variableRef="uart.mUartIerAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Enable Rx ready interrupt" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="1" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="1" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="irqNumberVar">
                  <VariableRef variableRef="uartVar.mIrqNumber" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Subscribe to Uart interrupt" interface="InterruptSubscriptionManagement_SubscribeToInterrupt_RiRi" command="InterruptSubscriptionManagement_SubscribeToInterrupt_RiRi">
                  <ArgumentValue name="interrupt">
                    <VariableRef variableRef="irqNumberVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <SendCommandPrimitive shortDescription="Enable Uart interrupt" interface="InterruptManagement_EnableInterrupt_RiRi" command="InterruptManagement_EnableInterrupt_RiRi">
                  <ArgumentValue name="interrupt">
                    <VariableRef variableRef="irqNumberVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
            <Activity name="SendByteAsync">
              <Argument name="uart" type="com/n7space/UartHwas/UartHwas"></Argument>
              <Argument name="byte" type="com/n7space/Hwas/Byte"></Argument>
              <Body>
                <Assignment outputVariableRef="irqNumberVar">
                  <VariableRef variableRef="uartVar.mIrqNumber" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Subscribe to Uart interrupt" interface="InterruptSubscriptionManagement_SubscribeToInterrupt_RiRi" command="InterruptSubscriptionManagement_SubscribeToInterrupt_RiRi">
                  <ArgumentValue name="interrupt">
                    <VariableRef variableRef="irqNumberVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <SendCommandPrimitive shortDescription="Enable Uart interrupt" interface="InterruptManagement_EnableInterrupt_RiRi" command="InterruptManagement_EnableInterrupt_RiRi">
                  <ArgumentValue name="interrupt">
                    <VariableRef variableRef="irqNumberVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <VariableRef variableRef="uart.mUartThrAddress" />
                </Assignment>
                <Assignment outputVariableRef="bitsValueVar">
                  <Value value="0" />
                </Assignment>
                <Assignment outputVariableRef="bitsValueVar">
                  <VariableRef variableRef="byte" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Write byte to Thr " interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="255" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="destinationAddressVar">
                  <LongDescription>Assign source address to variable</LongDescription>
                  <VariableRef variableRef="uart.mUartIerAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Enable Tx empty interrupt" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="destinationAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="512" />
                  </ArgumentValue>
                  <ArgumentValue name="inputValue">
                    <Value value="512" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
            <Activity name="IRQHandler">
              <Body>
                <Call activity="GetLocalUart" />
                <Assignment outputVariableRef="sourceAddressVar">
                  <VariableRef variableRef="uartVar.mUartImrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Read interrupt mask for RXRDY(IMR)" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="1" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="bitsMaskVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="sourceAddressVar">
                  <VariableRef variableRef="uartVar.mUartSrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Read OVRE bit from UART_SR" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="32" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Conditional>
                  <LongDescription>Is OVRE set in SR and IMR?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="bitsValueVar"></FirstOperand>
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="32" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <SendCommandPrimitive interface="UartErrorReporting_OverrunError_RiRi" command="UartErrorReporting_OverrunError_RiRi"></SendCommandPrimitive>
                  </OnConditionTrue>
                </Conditional>
                <SendCommandPrimitive shortDescription="Read RXRDY bit from UART_SR" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="bitsMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Conditional>
                  <LongDescription>Is RxRDY set in SR and IMR?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="bitsValueVar"></FirstOperand>
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="1" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="sourceAddressVar">
                      <VariableRef variableRef="uartVar.mUartRhrAddress" />
                    </Assignment>
                    <SendCommandPrimitive shortDescription="Read byte" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                      <ArgumentValue name="address">
                        <VariableRef variableRef="sourceAddressVar" />
                      </ArgumentValue>
                      <ArgumentValue name="mask">
                        <Value value="255" />
                      </ArgumentValue>
                      <ArgumentValue name="outputValue">
                        <VariableRef variableRef="bitsValueVar" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                    <Assignment outputVariableRef="readWrapperNotifyVar.byteToRead">
                      <VariableRef variableRef="bitsValueVar" />
                    </Assignment>
                    <SendCommandPrimitive interface="UartHwas_ReadByteAsyncCmd_RiRi" command="UartHwas_ReadByteAsyncCmd_RiRi">
                      <ArgumentValue name="InputParam">
                        <VariableRef variableRef="readWrapperNotifyVar" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                  </OnConditionTrue>
                </Conditional>
                <Assignment outputVariableRef="sourceAddressVar">
                  <VariableRef variableRef="uartVar.mUartImrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Read interrupt mask for TXEMPTY(IMR)" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <Value value="512" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="bitsMaskVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Assignment outputVariableRef="sourceAddressVar">
                  <VariableRef variableRef="uartVar.mUartSrAddress" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Read uartVar status of RXRDY masked taking value from IMR" interface="RawMemoryAccess_ReadWord_RiRi" command="RawMemoryAccess_ReadWord_RiRi">
                  <ArgumentValue name="address">
                    <VariableRef variableRef="sourceAddressVar" />
                  </ArgumentValue>
                  <ArgumentValue name="mask">
                    <VariableRef variableRef="bitsMaskVar" />
                  </ArgumentValue>
                  <ArgumentValue name="outputValue">
                    <VariableRef variableRef="bitsValueVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
                <Conditional>
                  <LongDescription>Is TXEMPTY set in SR and IMR?</LongDescription>
                  <Condition>
                    <Condition>
                      <FirstOperand variableRef="bitsValueVar"></FirstOperand>
                      <ComparisonOperator>equals</ComparisonOperator>
                      <Value value="512" />
                    </Condition>
                  </Condition>
                  <OnConditionTrue>
                    <Assignment outputVariableRef="destinationAddressVar">
                      <VariableRef variableRef="uartVar.mUartIdrAddress" />
                    </Assignment>
                    <SendCommandPrimitive shortDescription="Disable uartVar TXEmpty interrupt" interface="RawMemoryAccess_WriteWord_RiRi" command="RawMemoryAccess_WriteWord_RiRi">
                      <ArgumentValue name="address">
                        <VariableRef variableRef="destinationAddressVar" />
                      </ArgumentValue>
                      <ArgumentValue name="mask">
                        <Value value="512" />
                      </ArgumentValue>
                      <ArgumentValue name="inputValue">
                        <Value value="512" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                    <Assignment outputVariableRef="sendWrapperNotifyVar.byteSentFlag">
                      <Value value="1" />
                    </Assignment>
                    <SendCommandPrimitive shortDescription="Notify that byte was received" interface="UartHwas_SendByteAsyncCmd_RiRi" command="UartHwas_SendByteAsyncCmd_RiRi">
                      <ArgumentValue name="InputParam">
                        <VariableRef variableRef="sendWrapperNotifyVar" />
                      </ArgumentValue>
                    </SendCommandPrimitive>
                  </OnConditionTrue>
                </Conditional>
                <Assignment outputVariableRef="irqNumberVar">
                  <VariableRef variableRef="uartVar.mIrqNumber" />
                </Assignment>
                <SendCommandPrimitive shortDescription="Enable uartVar interrupt" interface="InterruptManagement_EnableInterrupt_RiRi" command="InterruptManagement_EnableInterrupt_RiRi">
                  <ArgumentValue name="interrupt">
                    <VariableRef variableRef="irqNumberVar" />
                  </ArgumentValue>
                </SendCommandPrimitive>
              </Body>
            </Activity>
          </ActivitySet>
          <StateMachineSet>
            <StateMachine name="uart_UartHwasDriver">
              <EntryState name="Off" />
              <State name="Idle" />
              <Transition fromState="Off" toState="Idle" name="Init">
                <OnCommandPrimitive command="UartHwas_InitUartCmd_PiPi" interface="UartHwas_InitUartCmd_PiPi">
                  <ArgumentValue name="config" outputVariableRef="configVar"></ArgumentValue>
                </OnCommandPrimitive>
                <Do activity="InitUart">
                  <ArgumentValue name="config">
                    <VariableRef variableRef="configVar" />
                  </ArgumentValue>
                </Do>
              </Transition>
              <Transition fromState="Idle" toState="Idle" name="ReadByte">
                <OnCommandPrimitive command="UartHwas_ReadByteAsyncCmd_PiPi" interface="UartHwas_ReadByteAsyncCmd_PiPi">
                  <ArgumentValue name="InputParam" outputVariableRef="readWrapperVar" />
                </OnCommandPrimitive>
                <Do activity="ReadByteAsync">
                  <ArgumentValue name="uart">
                    <VariableRef variableRef="readWrapperVar.uart" />
                  </ArgumentValue>
                </Do>
              </Transition>
              <Transition fromState="Idle" toState="Idle" name="SendByte">
                <OnCommandPrimitive command="UartHwas_SendByteAsyncCmd_PiPi" interface="UartHwas_SendByteAsyncCmd_PiPi">
                  <ArgumentValue name="InputParam" outputVariableRef="sendWrapperVar" />
                </OnCommandPrimitive>
                <Do activity="SendByteAsync">
                  <ArgumentValue name="uart">
                    <VariableRef variableRef="sendWrapperVar.uart" />
                  </ArgumentValue>
                  <ArgumentValue name="byteToSend">
                    <VariableRef variableRef="sendWrapperVar.byteToSend" />
                  </ArgumentValue>
                </Do>
              </Transition>
              <Transition fromState="Idle" toState="Idle" name="IRQHandling">
                <OnCommandPrimitive command="InterruptSubscription_Interrupt_PiPi" interface="InterruptSubscription_Interrupt_PiPi">
                  <ArgumentValue name="interrupt" outputVariableRef="irqNumberVar" />
                </OnCommandPrimitive>
                <Do activity="IRQHandler"></Do>
              </Transition>
            </StateMachine>
          </StateMachineSet>
        </Implementation>
      </Component>
    </ComponentSet>
  </Package>
  <!-- user code -->
</PackageFile>
