-- This is autogenerated AADL snippet for rs485_linux driver project.
-- Please merge contents of this file with ocarina_components.aadl from your Taste instance
-- installation (usually /home/taste/tool-src/misc/aadl-library/ocarina_components.aadl).
--
-- After Taste installation update, the original contents of ocarina_components.aadl will be restored!
-- If you want to keep using your driver, you will have to merge the following code with
-- ocarina_components.aadl again.

-- ############################################################################
-- Paste the following code into "Configuration Type" section.
-- ############################################################################

data configuration_type_rs485_linux
properties
  Type_Source_Name => "RS485-LINUX-Conf-T";
  Deployment::ASN1_Module_Name => "RS485-LINUX-DRIVER-CONFIGURATION";
  Source_Language => (ASN1);
  Source_Text => ("/home/taste/tool-inst/include/TASTE-Linux-Drivers/configurations/rs485_linuxconfiguration.asn");
end configuration_type_rs485_linux;

-- ############################################################################
-- Paste the following code into "Device" section.
-- ############################################################################

  ---------------------------
  -- device rs485_linux --
  ---------------------------
  device device_rs485_linux
  features
    link : requires bus access ocarina_buses::ip.generic;
  end device_rs485_linux;

  device implementation device_rs485_linux.linux
  properties
    Deployment::Driver_Name       => "rs485_linux";
    Device_Driver                 => classifier (ocarina_drivers_rs485_linux::rs485_linux.linux);
    Initialize_Entrypoint         => classifier (ocarina_drivers_rs485_linux::driver_rs485_linux_init);
    Provided_Virtual_Bus_Class    => (classifier (ocarina_buses::generic.linux));
  end device_rs485_linux.linux;

-- ############################################################################
-- Paste the following code into "Driver" section.
-- ############################################################################

package ocarina_drivers_rs485_linux
public

  with Deployment;
  with ocarina_drivers;

  subprogram driver_rs485_linux_poll
  properties
    Source_Language => (Cpp);
    Source_Name => "rs485_linux_DriverPoll";
    Source_Text => ("rs485_linux.cc",
                    "rs485_linux.h");
  end driver_rs485_linux_poll;

  subprogram driver_rs485_linux_send
  properties
    Source_Language => (Cpp);
    Source_Name => "rs485_linux_DriverSend";
    Source_Text => ("rs485_linux.cc",
                    "rs485_linux.h");
  end driver_rs485_linux_send;

  subprogram driver_rs485_linux_init
  properties
    Source_Language => (Cpp);
    Source_Name => "rs485_linux_DriverInit";
    Source_Text => ("rs485_linux.cc",
                    "rs485_linux.h");
  end driver_rs485_linux_init;

  thread driver_rs485_linux_poller
  end driver_rs485_linux_poller;

  thread implementation driver_rs485_linux_poller.impl
  calls
    mycall : {
    pspg : subprogram driver_rs485_linux_poll;
    };
  properties
    Period => 1000ms;
    Dispatch_Protocol => Periodic;
  end driver_rs485_linux_poller.impl;

  abstract rs485_linux
  properties
    Deployment::Version  => "1.0";
    Deployment::Help     => "Write your ASN.1 configuration here";
    Deployment::Configuration_Type => classifier (ocarina_drivers::configuration_type_rs485_linux);
  end rs485_linux;

  abstract implementation rs485_linux.linux
  subcomponents
    receiver : thread driver_rs485_linux_poller.impl;
    sender : subprogram driver_rs485_linux_send;
  end rs485_linux.linux;

end ocarina_drivers_rs485_linux;
