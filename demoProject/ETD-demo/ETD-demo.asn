ETD-DEMO-DATAVIEW DEFINITIONS ::=
BEGIN

-- ASN.1 Type definitions must start with an uppercase
-- Field names in records (SEQUENCE) must start with a lowercase
-- Underscores are not allowed: use dash (hyphen)
-- For integers do not assume that small ranges will be translated to small
-- types in C or Ada (expect unsigned or signed 64 bits types with subtypes
-- for the range in Ada)

-- Simple types:

-- TASTE-Boolean ::= BOOLEAN
-- MyInteger   ::= INTEGER (0..255)
-- MyReal      ::= REAL (0.0 .. 1000.0)
-- MyBool      ::= BOOLEAN

-- Complex types:

PhisicValType ::= REAL (-10000.0 .. 10000.0)

SystemMode ::= ENUMERATED { off, idle, on }
DeviceState ::= ENUMERATED { off, on }
Response ::= ENUMERATED { accepted, error }

SystemPhisicAttrs  ::= SEQUENCE {
    velocity  PhisicValType,
    height PhisicValType
}

TC-Data  ::= SEQUENCE {
    mode-request  SystemMode
}

TM-Data  ::= SEQUENCE {
    mode-confirmation  Response
}

SensorControl-Data  ::= SEQUENCE {
    state-request  DeviceState
}

ActuatorControl-Data  ::= SEQUENCE {
    state-request  DeviceState
}

SensorStatusUpdate-Data  ::= SEQUENCE {
    device-state  DeviceState,
    system-phisic-attrs SystemPhisicAttrs
}

ActuatorStatusUpdate-Data  ::= SEQUENCE {
    device-state  DeviceState,
    acceleration PhisicValType
}

SystemDataRequest-Data  ::= SEQUENCE {
    actuator-state  DeviceState,
    sensor-state  DeviceState,
    acceleration PhisicValType,
    system-phisic-attrs SystemPhisicAttrs
}

Sense-Data  ::= SEQUENCE {
    phisic-tick  INTEGER (0..4294967296),
    system-phisic-attrs SystemPhisicAttrs,
    acceleration PhisicValType
}
--
--  MyChoice    ::= CHOICE {
--      a BOOLEAN,
--      b MySeq
--  }
--
--  MySeqOf     ::= SEQUENCE (SIZE (2)) OF MyEnum
--
--  MyOctStr    ::= OCTET STRING (SIZE (3))
--
--  -- You can also declare constants
--  myVar       MySeqOf     ::= { hello, world }

END

